name: Security Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety pytest-cov

    - name: Run Bandit
      run: bandit -r src/ -ll -ii -f json -o bandit-results.json

    - name: Run Safety Check
      run: safety check

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Run Container Scan
      uses: anchore/scan-action@v2
      with:
        image: "gcr.io/secureai-nexus/secureai-platform:latest"
        fail-build: true
        severity-cutoff: high

    - name: Upload security results
      uses: actions/upload-artifact@v2
      with:
        name: security-results
        path: bandit-results.json

  build-and-test:
    needs: security-checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Run tests with coverage
      run: pytest --cov=src --cov-report=xml

    - name: Build Docker image
      run: docker build -t gcr.io/secureai-nexus/secureai-platform:latest .

    - name: Scan Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'gcr.io/secureai-nexus/secureai-platform:latest'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

  deploy-security:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Security Settings
      run: |
        gcloud services enable cloudsecurityscanner.googleapis.com
        gcloud services enable securitycenter.googleapis.com
        gcloud services enable cloudkms.googleapis.com

    - name: Set up Cloud Monitoring
      run: |
        gcloud monitoring channels create \
          --display-name="Security Alerts" \
          --type=email \
          --email-address=security@secureai-nexus.com

    - name: Create Security Policies
      run: |
        gcloud compute security-policies create secureai-policy \
          --description="Security policy for SecureAI Platform"

    - name: Run Security Scanner
      run: |
        gcloud web-security-scanner scan-runs create \
          --scan-config=secureai-scan \
          --display-name="Post Deploy Security Scan"
